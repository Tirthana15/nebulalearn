
<?php require_once 'functions.php'; if (!isLoggedIn() || !isStudent()) { header('HTTP/1.1 403 Forbidden'); echo json_encode(['success' => false, 'message' => 'Access denied']); exit; } $data = json_decode(file_get_contents('php://input'), true); $sessionId = sanitizeInput($data['session_id']); $studentId = $_SESSION['user_id']; global $conn; // Get session start time $stmt = $conn->prepare("SELECT start_time FROM study_sessions WHERE id = ? AND student_id = ? AND end_time IS NULL"); $stmt->bind_param("ii", $sessionId, $studentId); $stmt->execute(); $result = $stmt->get_result(); if ($result->num_rows === 0) { echo json_encode(['success' => false, 'message' => 'Session not found or already ended']); exit; } $session = $result->fetch_assoc(); $startTime = new DateTime($session['start_time']); $endTime = new DateTime(); $duration = $endTime->getTimestamp() - $startTime->getTimestamp(); // Update session with end time and duration $stmt = $conn->prepare("UPDATE study_sessions SET end_time = NOW(), duration = ? WHERE id = ?"); $stmt->bind_param("ii", $duration, $sessionId); if ($stmt->execute()) { // Award points based on session duration (1 point per 5 minutes) $points = floor($duration / 300); if ($points > 0) { $stmt = $conn->prepare("UPDATE students SET points = points + ? WHERE id = ?"); $stmt->bind_param("ii", $points, $studentId); $stmt->execute(); } echo json_encode(['success' => true, 'points_earned' => $points]); } else { echo json_encode(['success' => false, 'message' => 'Error ending study session']); } ?>